name: Release unity2text

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v0.1.0.0)"
        required: true

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ['9.12.2']
        cabal: ['3.12.1.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cache ~/.cabal/packages, ~/.cabal/store and dist-newstyle
        uses: actions/cache@v4
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
          restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build
        shell: bash
        run: |
          cabal update
          cabal build exe:unity2text

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir release
          BIN_PATH=$(cabal list-bin exe:unity2text)
          cp "$BIN_PATH" release/
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Switch to PowerShell for zipping on Windows
            pwsh -Command "
              Set-Location release;
              Compress-Archive -Path unity2text.exe -DestinationPath unity2text-${{ github.event.inputs.tag }}-windows.zip
            "
          else
            cd release
            tar czf unity2text-${{ github.event.inputs.tag }}-${{ matrix.os }}.tar.gz unity2text
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: unity2text-${{ matrix.os }}
          path: |
            release/**/*.tar.gz
            release/**/*.zip

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: "unity2text ${{ github.event.inputs.tag }}"
          files: |
            release/**/*.tar.gz
            release/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
